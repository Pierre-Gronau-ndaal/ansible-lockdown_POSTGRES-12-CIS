---
# Section 1
# Installation and Patches
- name: "NOTSCORED | 1.1 | AUDIT | Ensure packages are obtained from authorized repositories"
  block:
      - name: "NOTSCORED | 1.1 | AUDIT | Ensure packages are obtained from authorized repositories | Get repo list RHEL8"
        shell: dnf repolist all | grep enabled
        changed_when: false
        failed_when: false
        register: pgs12cis_1_1_enabled_repos_rh8
        when:
          - ansible_distribution_file_variety == "RedHat"
          - ansible_distribution_major_version == "8"

      - name: "NOTSCORED | 1.1 | AUDIT | Ensure packages are obtained from authorized repositories | Get repo list RHEL7"
        shell: yum repolist all | grep enabled
        changed_when: false
        failed_when: false
        register: pgs12cis_1_1_enabled_repos_rh7
        when:
          - ansible_distribution_file_variety == "RedHat"
          - ansible_distribution_major_version == "7"

      - name: "NOTSCORED | 1.1 | AUDIT | Ensure packages are obtained from authorized repositories | Show repo list RHEL8"
        debug:
            msg:
                - "Alert! Below are the enabled repo's. Please review to confirm these are authorized repositories"
                - "{{ pgs12cis_1_1_enabled_repos_rh8.stdout_lines }}"
        when:
          - ansible_distribution_file_variety == "RedHat"
          - ansible_distribution_major_version == "8"

      - name: "NOTSCORED | 1.1 | AUDIT | Ensure packages are obtained from authorized repositories | Show repo list RHEL8"
        debug:
            msg:
                - "Alert! Below are the enabled repo's. Please review to confirm these are authorized repositories"
                - "{{ pgs12cis_1_1_enabled_repos_rh7.stdout_lines }}"
        when:
          - ansible_distribution_file_variety == "RedHat"
          - ansible_distribution_major_version == "7"
  when:
      - pgs12cis_rule_1_1
      - pgs12cis_section1
  tags:
      - level1-postgresql
      - notscored
      - audit
      - rule_1.1

- name: "NOTSCORED | 1.2 | AUDIT | Ensure Installation of Binary Packages"
  block:
      - name: "NOTSCORED | 1.2 | AUDIT | Ensure Installation of Binary Packages | Get installed packages and repo RHEL8"
        shell: dnf info $(rpm -qa|grep postgres) | egrep '^Name|^Version|^From'
        changed_when: false
        failed_when: false
        register: pgs12cis_1_2_installed_pckg_rpm_rh8
        when:
          - ansible_distribution_file_variety == "RedHat"
          - ansible_distribution_major_version == "8"

      - name: "NOTSCORED | 1.2 | AUDIT | Ensure Installation of Binary Packages | Get installed packages and repo RHEL7"
        shell: yum info $(rpm -qa|grep postgres) | egrep '^Name|^Version|^From'
        changed_when: false
        failed_when: false
        register: pgs12cis_1_2_installed_pckg_rpm_rh7
        when:
          - ansible_distribution_file_variety == "RedHat"
          - ansible_distribution_major_version == "7"

      - name: "NOTSCORED | 1.2 | AUDIT | Ensure Installation of Binary Packages | Show installed packages and repo RHEL8"
        debug:
            msg:
                - "Alert! Below are the installed postgres packages and where they came from"
                - "Please review and if the expected binary packages are not installed or did not come from an appropriate repo, this is a fail"
                - "{{ pgs12cis_1_2_installed_pckg_rpm_rh8.stdout_lines }}"
        when:
          - ansible_distribution_file_variety == "RedHat"
          - ansible_distribution_major_version == "8"

      - name: "NOTSCORED | 1.2 | AUDIT | Ensure Installation of Binary Packages | Show installed packages and repo RHEL7"
        debug:
            msg:
                - "Alert! Below are the installed postgres packages and where they came from"
                - "Please review and if the expected binary packages are not installed or did not come from an appropriate repo, this is a fail"
                - "{{ pgs12cis_1_2_installed_pckg_rpm_rh7.stdout_lines }}"
        when:
          - ansible_distribution_file_variety == "RedHat"
          - ansible_distribution_major_version == "7"
  when:
      - pgs12cis_rule_1_2
      - pgs12cis_section1
  tags:
      - level1-postgresqlonlinux
      - notscored
      - audit
      - rule_1.2

- name: "NOTSCORED | 1.3 | AUDIT | Ensure Installation of Community Packages"
  block:
      - name: "NOTSCORED | 1.3 | AUDIT | Ensure Installation of Community Packages | Get installed packages and repo RHEL8"
        shell: dnf info $(rpm -qa|grep postgres) | egrep '^Name|^Version|^From'
        changed_when: false
        failed_when: false
        register: pgs12cis_1_3_installed_pckg_rpm_rh8
        when:
          - ansible_distribution_file_variety == "RedHat"
          - ansible_distribution_major_version == "8"

      - name: "NOTSCORED | 1.3 | AUDIT | Ensure Installation of Community Packages | Get installed packages and repo RHEL7"
        shell: yum info $(rpm -qa|grep postgres) | egrep '^Name|^Version|^From'
        changed_when: false
        failed_when: false
        register: pgs12cis_1_3_installed_pckg_rpm_rh7
        when:
          - ansible_distribution_file_variety == "RedHat"
          - ansible_distribution_major_version == "7"

      - name: "NOTSCORED | 1.3 | AUDIT | Ensure Installation of Community Packages | Show installed packages and repo RHEL8"
        debug:
            msg:
                - "Alert! Below are the installed postgres packages and where they came from"
                - "Please review and if the expected community packages are not installed or did not come from the PGDG repo, this is a fail"
                - "{{ pgs12cis_1_3_installed_pckg_rpm_rh8.stdout_lines }}"
        when:
          - ansible_distribution_file_variety == "RedHat"
          - ansible_distribution_major_version == "8"

      - name: "NOTSCORED | 1.3 | AUDIT | Ensure Installation of Community Packages | Show installed packages and repo RHEL7"
        debug:
            msg:
                - "Alert! Below are the installed postgres packages and where they came from"
                - "Please review and if the expected community packages are not installed or did not come from an PGDG repo, this is a fail"
                - "{{ pgs12cis_1_3_installed_pckg_rpm_rh7.stdout_lines }}"
        when:
          - ansible_distribution_file_variety == "RedHat"
          - ansible_distribution_major_version == "7"
  when:
      - pgs12cis_rule_1_3
      - pgs12cis_section1
  tags:
      - level1-postgresqlonlinux
      - notscored
      - audit
      - rule_1.3

- name: "SCORED | 1.4 | PATCH | Ensure systemd Service Files Are Enabled"
  service:
      name: "{{ pgs12cis_postgresql_service }}"
      enabled: true
  when:
      - pgs12cis_rule_1_4
      - pgs12cis_section1
  tags:
      - level1-postgresqlonlinux
      - scored
      - patch
      - rule_1.4

- name: "SCORED | 1.5 | PATCH | Ensure Data Cluster Initialized Successfully"
  shell: 'PGSETUP_INITDB_OPTIONS="-k" /usr/pgsql-12/bin/postgresql-12-setup initdb'
  changed_when: '"OK" in pgs12cis_1_5_db_initialize.stdout'
  failed_when: false
  register: pgs12cis_1_5_db_initialize
  when:
      - pgs12cis_rule_1_5
      - pgs12cis_section1
  tags:
      - level1-postgresqlonlinux
      - scored
      - patch
      - rule_1.5

# Section 2
# Directory and File Permissions
- name: "SCORED | 2.1 | PATCH | Ensure the file permissions mask is correct"
  block:
      - name: "SCORED | 2.1 | AUDIT | Ensure the file permissions mask is correct | Get user environment file (.bashrc, .bash_profile, or .profile}"
        # shell: ls -a /var/lib/pgsql/ | grep -e '.bashrc\|.bash_profile\|.profile'
        shell: ls -a "{{ pgs12cis_pgs12_usr_home_dir.stdout }}" | grep -e '.bashrc\|.bash_profile\|.profile'
        changed_when: false
        failed_when: false
        register: pgs12cis_2_1_env_file

      - name: "SCORED | 2.1 | PATCH | Ensure the file permissions mask is correct | Set umask"
        lineinfile:
            path: "{{ pgs12cis_pgs12_usr_home_dir.stdout }}/{{ pgs12cis_2_1_env_file.stdout }}"
            regexp: '^umask|^UMASK'
            line: "umask 0{{ pgs12cis_umask_value }}"
  when:
      - pgs12cis_rule_2_1
      - pgs12cis_section2
  tags:
      - level1-postgresqlonlinux
      - scored
      - patch
      - rule_2.1

- name: "SCORED | 2.2 | PATCH | Ensure the PostgreSQL pg_wheel group membership is correct"
  block:
      - name: "SCORED | 2.2 | PATCH | Ensure the PostgreSQL pg_wheel group membership is correct | Create pg_wheel group"
        group:
            name: pg_wheel
            state: present

      - name: "SCORED | 2.2 | PATCH | Ensure the PostgreSQL pg_wheel group membership is correct"
        user:
            name: "{{ pgs12cis_pgs12_usr }}"
            groups: pg_wheel
  when:
      - pgs12cis_rule_2_2
      - pgs12cis_section2
  tags:
      - level1-postgresqlonlinux
      - scored
      - patch
      - rule_2.2

# Section 3
# # Logging Monitoring and Auditing
- name: "SCORED | 3.1.2 | PATCH |  Ensure the log destinations are set correctly"
  lineinfile:
      path: "{{ pgs12cis_data_folder }}/postgresql.conf"
      regexp: '^log_destination ='
      line: "log_destination = '{{ pgs12cis_log_destination }}'"
  notify: restart postgresql
  when:
      - pgs12cis_rule_3_1_2
      - pgs12cis_section3
  tags:
      - level1-postgresql
      - level1-postgresqlonlinux
      - scored
      - patch
      - rule_3.1.2

- name: "SCORED | 3.1.3 | PATCH | Ensure the logging collector is enabled"
  lineinfile:
      path: "{{ pgs12cis_data_folder }}/postgresql.conf"
      regexp: '^logging_collector ='
      line: "logging_collector = on"
  notify: restart postgresql
  when:
      - pgs12cis_rule_3_1_3
      - pgs12cis_section3
  tags:
      - level1-postgresql
      - level1-postgresqlonlinux
      - scored
      - patch
      - rule_3.3

- name: "SCORED | 3.1.4 | PATCH | Ensure the log file destination directory is set correctly"
  lineinfile:
      path: "{{ pgs12cis_data_folder }}/postgresql.conf"
      regexp: '^log_directory ='
      line: "log_directory = '{{ pgs12cis_log_directory }}'"
  notify: restart postgresql
  when:
      - pgs12cis_rule_3_1_4
      - pgs12cis_section3
  tags:
      - level1-postgresql
      - level1-postgresqlonlinux
      - scored
      - patch
      - rule_3.1.4

- name: "SCORED | 3.1.5 | PA | Ensure the filename pattern for log files is set correctly"
  lineinfile:
      path: "{{ pgs12cis_data_folder }}/postgresql.conf"
      regexp: '^log_filename ='
      line: "log_filename = '{{ pgs12cis_log_filename }}'"
  notify: restart postgresql
  when:
      - pgs12cis_rule_3_1_5
      - pgs12cis_section3
  tags:
      - level1-postgresql
      - level1-postgresqlonlinux
      - scored
      - patch
      - rule_3.1.4