---

# Section 7
# Replication
- name: "7.1 | | PATCH | Ensure a replication-only user is created and used for streaming replication"
  block:
      - name: "7.1 | | AUDIT | Ensure a replication-only user is created and used for streaming replication | Create replication user"
        ansible.builtin.shell: psql -t -c "select rolname from pg_roles where rolreplication is true;" | sed -r '/^\s*$/d' | awk '{$1=$1};1'
        changed_when: false
        failed_when: false
        become_user: "{{ pgs12cis_pgs12_usr }}"
        register: pgs12cis_7_1_replication_users

      - name: "7.1 | | PATCH | Ensure a replication-only user is created and used for streaming replication | Create replication user"
        ansible.builtin.shell: psql -c "create user {{ pgs12cis_replication_user }} REPLICATION encrypted password '{{ pgs12cis_replication_user_pw }}';"
        failed_when: false
        become_user: "{{ pgs12cis_pgs12_usr }}"
        when: "pgs12cis_replication_user not in pgs12cis_7_1_replication_users.stdout"

      - name: "7.1 | | PATCH | Ensure a replication-only user is created and used for streaming replication | Create replication user pg_hba.conf entry"
        ansible.builtin.lineinfile:
            path: "{{ pgs12cis_hba_config_file }}"
            regexp: "{{ item.regexp }}"
            line: "{{ item.line }}"
            insertafter: "{{ item.insertafter }}"
        with_items:
            - { regexp: '^this is just a place holder value', line: '# The rule below was inserted via CIS automation', insertafter: '^# TYPE  DATABASE        USER'}
            - { regexp: '^hostssl replication     {{ pgs12cis_replication_user }}', line: "hostssl replication {{ pgs12cis_replication_user }} 0.0.0.0/0 {{ pgs12cis_replication_user_enc_method }}", insertafter: '^# The rule below was inserted via CIS automation' }
        notify: restart postgresql
        when: "pgs12cis_replication_user not in pgs12cis_7_1_replication_users.stdout"
  when:
      - pgs12cis_rule_7_1
      - pgs12cis_section7
  tags:
      - level1-postgresql
      - level1-postgresqlonlinux
      - patch
      - ubuntu
      - rule_7.1

- name: "7.2 | AUDIT | Ensure base backups are configured and functional | Absent"
  ansible.builtin.debug:
      msg:
          - "Warning!! To conform to CIS standards make sure to use base backups. This is a manual task."

- name: "7.2 | AUDIT | Ensure base backups are configured and functional | Present"
  ansible.builtin.import_tasks: warning_facts.yml
  vars:
      warn_control_id: '7.2'
  when:
      - pgs12cis_rule_7_2
      - pgs12cis_section7
  tags:
      - level1-postgresql
      - level1-postgresqlonlinux
      - audit
      - ubuntu
      - rule_7.2

- name: "7.3 | PATCH | Ensure WAL archiving is configured and functional"
  ansible.builtin.lineinfile:
      path: "{{ pgs12cis_config_file }}"
      regexp: "{{ item.regexp }}"
      line: "{{ item.line }}"
  notify: restart postgresql
  with_items:
      - { regexp: '^archive_mode =|^#archive_mode =', line: 'archive_mode = on' }
      - { regexp: '^archive_command =|^#archive_command =', line: "archive_command = '{{ pgs12cis_archive_command }}'" }
  when:
      - pgs12cis_rule_7_3
      - pgs12cis_section7
  tags:
      - level1-postgresqlonlinux
      - patch
      - ubuntu
      - rule_7.3

- name: "7.4 | AUDIT | Ensure streaming replication parameters are configured correctly | Absent"
  ansible.builtin.debug:
      msg:
          - "Warning!! Please ensure streaming replication parameters are configured. This is a manual task."

- name: "7.4 | AUDIT | Ensure packages are obtained from authorized repositories | Present"
  ansible.builtin.import_tasks: warning_facts.yml
  vars:
      warn_control_id: '7.4'
  when:
      - pgs12cis_rule_7_4
      - pgs12cis_section7
  tags:
      - level1-postgresql
      - level1-postgresqlonlinux
      - audit
      - ubuntu
      - rule_7.4

# Section 8
# Special Configuration Considerations
- name: "8.1 | AUDIT | Ensure PostgreSQL configuration files are outside the data cluster"
  block:
      - name: "8.1 | AUDIT | Ensure PostgreSQL configuration files are outside the data cluster | Get file list"
        ansible.builtin.shell: psql -c "select name, setting from pg_settings where name ~ '.*_file$';"
        changed_when: false
        failed_when: false
        become_user: "{{ pgs12cis_pgs12_usr }}"
        register: pgs12cis_8_1_files_used

      - name: "8.1 | AUDIT | Ensure PostgreSQL configuration files are outside the data cluster | Display file listings | Absent"
        ansible.builtin.debug:
            msg:
                - "Warning!! Please review the settings and determine appropriate locations and file permissions for the configuration files"
                - "based on organization's security policies. This is a manual task."
                - "{{ pgs12cis_8_1_files_used.stdout_lines }}"

      - name: "8.1 | AUDIT | Ensure PostgreSQL configuration files are outside the data cluster | Present"
        ansible.builtin.import_tasks: warning_facts.yml
  vars:
      warn_control_id: '8.1'
  when:
      - pgs12cis_rule_8_1
      - pgs12cis_section8
  tags:
      - level1-postgresql
      - level1-postgresqlonlinux
      - audit
      - ubuntu
      - rule_8.1

- name: "8.2 | AUDIT | Ensure PostgreSQL subdirectory locations are outside the data cluster"
  block:
      - name: "8.2 | AUDIT | Ensure PostgreSQL subdirectory locations are outside the data cluster | Get directory settings"
        ansible.builtin.shell: psql -c "select name, setting from pg_settings where (name ~ '_directory$' or name ~ '_tablespace');"
        changed_when: false
        failed_when: false
        become_user: "{{ pgs12cis_pgs12_usr }}"
        register: pgs12cis_8_2_directory_settings

      - name: "8.2 | AUDIT | Ensure PostgreSQL subdirectory locations are outside the data cluster | Display settings | Absent"
        ansible.builtin.debug:
            msg:
                - "Warning!! Please inspect the file and directory permissions for all returned values. Only superusers and authorized users"
                - "should have access control rights for these files and directories. This is a manual task."
                - "{{ pgs12cis_8_2_directory_settings.stdout_lines }}"

      - name: "8.2 | AUDIT | Ensure PostgreSQL subdirectory locations are outside the data cluster | Present"
        ansible.builtin.import_tasks: warning_facts.yml
  vars:
      warn_control_id: '8.2'
  when:
      - pgs12cis_rule_8_2
      - pgs12cis_section8
  tags:
      - level1-postgresql
      - level1-postgresqlonlinux
      - audit
      - ubuntu
      - rule_8.2

- name: "8.3 | AUDIT | Ensure the backup and restore tool, 'pgBackRest', is installed and configured"
  block:
      - name: "8.3 | AUDIT | Ensure the backup and restore tool, 'pgBackRest', is installed and configured | Check for pgBackRest"
        ansible.builtin.shell: which pgbackrest
        changed_when: false
        failed_when: false
        register: pgs12cis_pgbackrest_status

      - name: "8.3 | AUDIT | Ensure the backup and restore tool, 'pgBackRest', is installed and configured | Missing pgBackRest | Absent"
        ansible.builtin.debug:
            msg:
                - "Warning!! You do not have pgBackRest installed. Please install and configure pgBackRest. This is a manual task."
        when: "'no pgbackrest' in pgs12cis_pgbackrest_status.stdout"

      - name: "8.3 | AUDIT | Ensure the backup and restore tool, 'pgBackRest', is installed and configured | pgBackRest installed"
        ansible.builtin.debug:
            msg:
                - "Good News! You have pgBackRest installed. Make sure it is configured appropriately for things like stanza name, backup"
                - "location, retention policy, logging, etc. This is a manual task."
        when: "'no pgbackrest' not in pgs12cis_pgbackrest_status.stdout"

      - name: "8.3 | AUDIT | Ensure packages are obtained from authorized repositories | Present"
        ansible.builtin.import_tasks: warning_facts.yml
  vars:
      warn_control_id: '8.3'
  when:
      - pgs12cis_rule_8_3
      - pgs12cis_section8
  tags:
      - level1-postgresqlonlinux
      - audit
      - ubuntu
      - rule_8.3

- name: "8.4 | AUDIT | Ensure miscellaneous configuration settings are correct"
  block:
      - name: "8.4 | AUDIT | Ensure miscellaneous configuration settings are correct | Get settings"
        ansible.builtin.shell: psql -c "select name, setting from pg_settings where name in ('external_pid_file', 'unix_socket_directories','shared_preload_libraries','dynamic_library_path',' local_preload_libraries','session_preload_libraries');"
        changed_when: false
        failed_when: false
        become_user: "{{ pgs12cis_pgs12_usr }}"
        register: pgs12cis_8_4_settings

      - name: "8.4 | AUDIT | Ensure miscellaneous configuration settings are correct | Display settings | Absent"
        ansible.builtin.debug:
            msg:
                - "Warning!! Please review the settings to confirm permissions are based on organization's policies. This is a manual task."
                - "{{ pgs12cis_8_4_settings.stdout_lines }}"
      - name: "8.4 | AUDIT | Ensure miscellaneous configuration settings are correct  | Present"
        ansible.builtin.import_tasks: warning_facts.yml
  vars:
      warn_control_id: '8.4'
  when:
      - pgs12cis_rule_8_4
      - pgs12cis_section8
  tags:
      - level1-postgresql
      - level1-postgresqlonlinux
      - audit
      - ubuntu
      - rule_8.4
